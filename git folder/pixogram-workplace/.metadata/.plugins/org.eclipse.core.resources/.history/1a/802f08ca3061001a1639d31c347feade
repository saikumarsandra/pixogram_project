package com.cts.training.Newsfeedservice.controller;

import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.cts.training.Newsfeedservice.entity.Newsfeed;
import com.cts.training.Newsfeedservice.repository.NewsfeedRepository;
import com.cts.training.Newsfeedservice.service.INewsfeedService;

@RestController
public class NewsfeedController {

	@Autowired
	private INewsfeedService newsfeedService;
	
	@GetMapping("/newsfeed")
	public ResponseEntity<NewsfeedModel> getallnews(){
		NewsfeedModel data = new NewsfeedModel();
		data.setNewsfeedlist(this.newsfeedService.getall());
		ResponseEntity<NewsfeedModel> result = new ResponseEntity<NewsfeedModel>(data, HttpStatus.OK);
		return result;
	}
	
	@PostMapping("/newsfeed")
	public boolean save(@RequestBody NewsfeedData newsfeed) {
		this.newsfeedService.save(newsfeed);
		return true;
	}
	
	@GetMapping("/newsfeed/{newsfeedId}")
	public ResponseEntity<NewsfeedData> getById(@PathVariable Integer newsfeedId){
		NewsfeedData data = new NewsfeedData();
		Newsfeed record = new Newsfeed();
		Optional<Newsfeed> newsfeed = this.newsfeedService.getWithId(newsfeedId);
		if(newsfeed.isPresent())
			record = newsfeed.get();
		else {
		//	throw new NewsfeedNotFoundException("newsfeed not found");
		}
		data.setId(record.getId());
		data.setUserId(record.getUserId());
		data.setFeed(record.getFeed());
		data.setCreatedOn(record.getCreatedOn());
		ResponseEntity<NewsfeedData> result = new ResponseEntity<NewsfeedData>(data, HttpStatus.OK);
		return result;
	}
	
	
	//update user
	@PutMapping("/newsfeed")
	public boolean update(@RequestBody NewsfeedData user) {
		
		this.newsfeedService.updateuser(user);
		return true;
		
	}
	
	







